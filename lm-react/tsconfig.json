{
  "compilerOptions": {
    "target": "esnext",
    "module": "esnext",
    // 以严格模式解析
    "strict": true,
    "jsx": "react",
    "importHelpers": true,
    "moduleResolution": "node",
    // 启用装饰器
    "experimentalDecorators": true,
    // 启用设计类型元数据（用于反射）
    "emitDecoratorMetadata": true,
    // 在表达式和声明上有隐含的any类型时报错
    "noImplicitAny": false,
    // 不是函数的所有返回路径都有返回值时报错。
    "noImplicitReturns": false,
    // 从 tslib 导入外部帮助库: 比如__extends，__rest等
    "importHelpers": true,
    // 编译过程中打印文件名
    "listFiles": false,
    // 移除注释
    "removeComments": true,
    "suppressImplicitAnyIndexErrors": true,
    // 允许编译javascript文件
    "allowJs": true,
    // 解析非相对模块名的基准目录
    "esModuleInterop": false,
    // 允许从没有设置默认导出的模块中默认导入
    "allowSyntheticDefaultImports": true,
    // 是否包含可以用于 debug 的 sourceMap
    "sourceMap": true,
    //解析非相对模块的基准目录
    "baseUrl": ".",
    //新增
    "strictPropertyInitialization": false,
    // "allowSyntheticDefaultImports": true,
    // "experimentalDecorators": true,
    "allowJs": true,
    //指定生成哪个模块系统的代码
    "module": "esnext",
    "target": "es5",
    "moduleResolution": "node",
    // 将每个文件作为单独的模块
    "isolatedModules": true,
    //在严格的 null检查模式下， null和 undefined值不包含在任何类型里，只允许用它们自己和 any来赋值（有个例外， undefined可以赋值到 void）
    "strictNullChecks": false,  
    //路径映射，如在文件中使用‘~/’相当于‘src/’
    "paths": {
      "@src": ["src/*"],
      "@examples/*": ["examples/*"]
    },
    // 编译过程中需要引入的库文件的列表
    "lib": [
      "esnext", 
      "dom", 
      "dom.iterable", 
      "scripthost",
      "es5",
      "es2015.promise"
    ]
  },
  "include": [
    "types/*.ts",
    "types/*.ts",
    "src/**/*",
    "examples/**/*"
  ],
  "exclude": ["node_modules", "build"]
}